apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-postgrespg"
  namespace: {{ .Values.namespace }}
  labels:
    app: postgrespg
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: postgrespg
  template:
    metadata:
      labels:
        app: postgrespg
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-db-env"
                  key: DB_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-db-env"
                  key: DB_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-db-env"
                  key: DB_postgrespg_NAME
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
              subPath: postgres
          resources: {{ toYaml .Values.postgres.resources | nindent 12 }}
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-postgres-db-pvc"

